plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.17'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'org.flywaydb.flyway' version "10.0.1"
}

group = 'com.ipze'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	gradlePluginPortal()
	mavenCentral()
}

dependencies {
	def mapstruct = "1.5.5.Final"

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-configuration-processor'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.itextpdf:html2pdf:5.0.1'
	implementation 'com.itextpdf:itextpdf:5.5.13.3'
	implementation 'org.apache.poi:poi:5.2.4'
	implementation 'org.apache.poi:poi-ooxml:5.2.4'
	implementation 'org.apache.poi:poi-scratchpad:5.2.4'
	implementation 'org.flywaydb:flyway-core'
	implementation "org.mapstruct:mapstruct:${mapstruct}"
	implementation 'com.auth0:java-jwt:4.4.0'
	implementation 'org.apache.pdfbox:pdfbox:2.0.24'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstruct}"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstruct}"
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}

flyway {
	url = 'jdbc:postgresql://' + System.getenv('RDS_HOSTNAME') + ':' + System.getenv('RDS_PORT') + '/' + System.getenv('RDS_DB_NAME')
	user = System.getenv('RDS_USERNAME')
	password = System.getenv('RDS_PASSWORD')
}
